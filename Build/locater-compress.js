(function(){var a=this.Locater={version:"1.0"}}());(function(c){var b=c.Rules={_rules:{},getRule:function(d){return this._rules[d]},getRules:function(){return this._rules},isDefined:function(d){return(this._rules[d])?true:false},define:function(d,e){if(!(Type.isFunction(e.invoke)||Type.isFunction(e))){throw new Error("The rule is an object or it is not a function.")}switch(typeOf(e)){case"object":this._rules[d]=e.invoke;break;case"function":this._rules[d]=e;break}}};var a={currentWatched:function(e,d){return(e==null)},positionChanged:function(e,d){if(e==null){return false}return !(e.getLatitude()==d.getLatitude()&&e.getLongitude()==d.getLongitude())},latitudeChanged:function(e,d){if(e==null){return false}return e.getLatitude()!=d.getLatitude()},longitudeChanged:function(e,d){if(e==null){return false}return e.getLongitude()!=d.getLongitude()},altitudeChanged:function(e,d){if(e==null){return false}return e.getAltitude()!=d.getAltitude()},accuracyChanged:function(e,d){if(e==null){return false}return e.getAccuracy()!=d.getAccuracy()},altitudeAccuracyChanged:function(e,d){if(e==null){return false}return e.getAltitudeAccuracy()!=d.getAltitudeAccuracy()},headingChanged:function(e,d){if(e==null){return false}return e.getHeading()!=d.getHeading()},speedChanged:function(e,d){if(e==null){return false}return e.getSpeed()!=d.getSpeed()}};for(key in a){b.define(key,a[key])}}(Locater));(function(a){a.Dispacher=new Class({_handlers:[],addHandler:function(b){this._handlers.push(b);return this},addHandlers:function(c){var b=this;c.each(function(d){b.addHandler(d)});return this},dispatch:function(b,c){this._handlers.each(function(d){if(Type.isFunction(d[b])){d[b].apply(d,[c])}})}})}(Locater));(function(b){var a=b.Geolocation=new Class({options:{enableHighAccuracy:true,timeout:10000,maximumAge:0},_getWatchID:function(){return this._watchID}.protect(),_setWatchID:function(d){this._watchID=d}.protect(),_getGeolocation:function(){return navigator.geolocation}.protect(),isWatching:function(){return(this._getWatchID()!=null)}});var c=b.Adapter={create:function(e,d){if(!this[e]){throw new Error("It tries to make an invalid adaptor.")}return new this[e](d)}};c.CurrentPositionAdapter=new Class({Implements:[a,Options],options:{watchHandler:null,errorHandler:null},initialize:function(d){this.setOptions(d)},start:function(){var e=this._getGeolocation();if(!e){throw new Error("Geolocation API is not supported.")}var f=this.options;var d=Object.subset(f,["enableHighAccuracy","timeout","maximumAge"]);if(f.watchHandler==null){throw new Error("Please specify either watchHandler.")}e.getCurrentPosition(f.watchHandler,f.errorHandler,d);this._setWatchID(true)},stop:function(){this._setWatchID(null)}});c.WatchPositionAdapter=new Class({Implements:[a,Options],options:{watchHandler:null,errorHandler:null},initialize:function(d){this.setOptions(d)},start:function(){var e=this._getGeolocation();if(!e){throw new Error("Geolocation API is not supported.")}var f=this.options;var d=Object.subset(f,["enableHighAccuracy","timeout","maximumAge"]);if(f.watchHandler==null){throw new Error("Please specify either watchHandler.")}else{if(f.watchHandler){this._setWatchID(e.watchPosition(f.watchHandler,f.errorHandler))}}},stop:function(){var d=this._getGeolocation();d.clearWatch(this._getWatchID());this._setWatchID(null)}})}(Locater));(function(b){var a=b.Handler={create:function(d,c){if(!this[d]){throw new Error("It tries to make an invalid handler.")}return new this[d](c)}};a.Handler=new Class({Implements:[Options],initialize:function(c){this.setOptions(c)}})}(Locater));(function(c){var a={latitude:0,longitude:0,altitude:0,accuracy:0,altitudeAccuracy:0,heading:0,speed:0};function b(f){var g=f.charAt(0).toUpperCase();var e=f.substr(1,f.length);var d="get"+g+e;return d}c.Context=function(g){var h=Object.keys(a);var e=Object.subset(g,h);var i=Object.merge(a,e);for(var f in i){var d=b(f);this[d]=Function.from(i[f])}return this};c.Context.implement({toString:function(){var g=[];for(var e in a){var d=b(e);var f=this[d]();if(Type.isObject(f)){if(Type.isFunction(f.toString)){f=f.toString()}else{continue}}g.push(e+"="+f)}return g.join(" ")}})}(Locater.Handler));(function(a){a.Application=new Class({Implements:[Options],options:{},_adapter:null,_dispacher:null,initialize:function(b,c){this.setOptions(c);this._adapter=b;this._dispacher=new a.Dispacher()},addHandler:function(b){this._dispacher.addHandler(b);return this},addHandlers:function(b){this._dispacher.addHandlers(b);return this},onWatchSuccess:function(b){var d=new a.Handler.Context(b.coords);var c=this;var e=a.Rules.getRules();Object.each(e,function(g,f){if(g.apply(g,[this.context,d])){c._dispacher.dispatch(f,d)}});this.context=d},onError:function(b){this._dispacher.dispatch("error",b)},run:function(){this.start()},start:function(){this._dispacher.dispatch("start");this._adapter.setOptions({watchHandler:this.onWatchSuccess.bind(this),errorHandler:this.onError.bind(this)});this._adapter.start()},stop:function(){this._adapter.stop();this._dispacher.dispatch("stop")}})}(Locater));